Testing specs for recipe model
name: string
summary: text
description: text


- name must be present
-name must be between 5 charaters and less than 100 characters

-summary must be present
-sumarry must be between 10 characters and less than 150 characters

-description must be present 
-description must between 20 and 500 characters

-chef_id must be present




Testing specs for chef model
-chefname: string
-email: string


-chefname must be present
-chefname must be between 3 characters and less than 40 characters
-email must be present
-email must be unique (since we will use this for logins later)
-email must be valid


Building Chef Authentication system

what we have already
-Chef model and validations
-chefs table with columns of chefname and email

What we need to build now:
-Add password column to the chefs table so chefs can be authenticated and logged in
-Use email as log in creidentials, since email is unique
-Ability to register new chefs to use our app
-Ability to diplays chefs profile
-Ability to list all chefs in our app
-Ability for chefs to log in and log out of our app
-Restrict actions like create recipe, edit recipe and like features to only logged in chefs
-Restricting the editing of recipes to be done by the chefs who creadted the recipes


Authentication Updates:
1. show recipe page -> Ability to edit/update only own recipes
2. Navigation partial -> Toggle our Menu, restric new
3. Restric thumbs up and thumbs down actions only to logged_in users 
4. Recipe -- update to current_user
5. Like -- update to current_user
6. Before_action  :require_user, except: [:show, :index]
7. Before_action  :require_same_user for chefs, only: [edit, :update]



Many to Many Association:
1. we will implement using has_many through asssociation
2. Requires a join table
3. One object/row in one tabel can be associated with multiple rows in a 2nd table and vice-versa

new start should be lecture NO 